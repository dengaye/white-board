{
  "root": true,
  "parser": "babel-eslint",
  "plugins": ["@typescript-eslint", "jsdoc", "import", "prettier", "react-hooks", "html"],
  "env": {
    "browser": true,
    "commonjs": true,
    "es6": true,
    "jest": true,
    "node": true
  },

  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },

  "overrides": [
    {
      // enable the rule specifically for TypeScript files
      "files": ["*.js", "*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "project": ["tsconfig.json"],
        "ecmaVersion": 2018,
        "sourceType": "module",
        "ecmaFeatures": {
          "jsx": true
        },
        "warnOnUnsupportedTypeScriptVersion": true
      },
      "extends": [
        "eslint:recommended",
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "plugin:react/recommended",
        "prettier"
      ],
      "globals": {
        "window": "readonly",
        "require": "readonly"
      },
      "settings": {
        "react": {
          "version": "16.13.1"
        }
      }
      // https://developer.aliyun.com/mirror/npm/package/@propelinc/eslint-plugin
      // https://cn.eslint.org/docs/rules
    }
  ],
  "rules": {
    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": "error",
    "camelcase": "off",
    // https://github.com/typescript-eslint/typescript-eslint/pull/1318
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "typeLike",
        "format": ["PascalCase"],
        "filter": { "regex": "^(__String|[A-Za-z]+_[A-Za-z]+)$", "match": false }
      },
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "custom": { "regex": "^I[A-Z]", "match": false },
        "filter": {
          "regex": "^I(Arguments|TextWriter|O([A-Z][a-z]+[A-Za-z]*)?)$",
          "match": false
        }
      },
      {
        "selector": "variable",
        "format": ["camelCase", "PascalCase", "UPPER_CASE"],
        "leadingUnderscore": "allow",
        "filter": {
          "regex": "^(_{1,2}filename|_{1,2}dirname|_+|[A-Za-z]+_[A-Za-z]+)$",
          "match": false
        }
      },
      {
        "selector": "function",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow",
        "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
      },
      {
        "selector": "parameter",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "filter": { "regex": "^(_+|[A-Za-z]+_[A-Z][a-z]+)$", "match": false }
      },
      {
        "selector": "method",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow",
        "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
      },
      {
        "selector": "memberLike",
        "format": ["camelCase"],
        "leadingUnderscore": "allow",
        "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
      },
      {
        "selector": "enumMember",
        "format": ["camelCase", "PascalCase"],
        "leadingUnderscore": "allow",
        "filter": { "regex": "^[A-Za-z]+_[A-Za-z]+$", "match": false }
      },
      { "selector": "property", "format": null }
    ],
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/consistent-type-definitions": ["error", "interface"],
    "@typescript-eslint/no-inferrable-types": "error",
    "no-duplicate-case": "error",
    "curly": ["error", "multi-line"],
    "quotes": "off",
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true,
        "avoidEscape": true
      }
    ],

    "jsdoc/check-alignment": "error",

    "react/jsx-no-target-blank": 0,
    // https://github.com/facebook/react/tree/master/packages/eslint-plugin-react-hooks
    "react-hooks/rules-of-hooks": "error",

    "constructor-super": "error",
    "dot-notation": "error",
    "eqeqeq": "error",
    "linebreak-style": ["error", "unix"],
    "new-parens": "error",
    "no-useless-escape": 0,
    "no-caller": "error",
    "no-duplicate-imports": "error",
    "no-console": [
      "error",
      {
        "allow": ["warn", "error"]
      }
    ],
    "no-empty": 0,
    "no-eval": "error",
    "no-extra-bind": "error",
    "no-fallthrough": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-return-await": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "error",
    "no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-undef-init": "error",
    "no-undef": "error",
    "no-unsafe-finally": "error",
    "no-unused-expressions": [
      "error",
      {
        "allowTernary": true
      }
    ],
    "no-unused-labels": "error",
    "no-var": "error",
    "object-shorthand": "error",
    "prefer-const": "error",
    "prefer-object-spread": "error",
    "quote-props": ["error", "consistent-as-needed"],
    "space-in-parens": "error",
    "unicode-bom": ["error", "never"],
    "use-isnan": "error"
  }
}
